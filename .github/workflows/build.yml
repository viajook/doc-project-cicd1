name: CI Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run add YAML Script for the build job
        run: echo "Build Job part of the CI/CD pipeline"
Comment: >

  name: CI/CD Pipeline (DOC)

  on:
    #Manually trigger workflow runs
    workflow_dispatch:
    #Trigger the workflow on push from the master branch
    push:
      branches: [ master ]
      #  - master
  #env:
  #  REGISTRY: ghcr.io
  #  IMAGE_NAME: ${{ github.repository }}
  #  GHCR_PAT: ${{ secrets.GHCR_PAT }}

  jobs:
      #Test's job
      tests:
        name: Unit tests
        #Run on Ubuntu using the latest version
        runs-on: ubuntu-latest
        #Job's steps
        steps:
        #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
        - uses: actions/checkout@v3
        #Set up JDK 17
        - name: Set up JDK 17
          uses: actions/setup-java@v1
          with:
            java-version: '17'
        #Set up Maven cache
        - name: Cache Maven packages
          #This action allows caching dependencies and build outputs to improve workflow execution time.
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        #Run Tests
        - name: Run Tests
          run: mvn -B test
      # Build jobs
      build:
        # depends on test's job
        needs: tests
        name: Build
        #Run on Ubuntu using the latest version
        runs-on: ubuntu-latest
        steps:
          #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
          - uses: actions/checkout@v3
          #Set up JDK 17
          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: '17'
          #Set up Maven cache
          - name: Cache Maven packages
            #This action allows caching dependencies and build outputs to improve workflow execution time.
            uses: actions/cache@v1
            with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
              restore-keys: ${{ runner.os }}-m2
          # Build the application using Maven
          - name: Build with Maven
            run: mvn -B package -DskipTests --file pom.xml

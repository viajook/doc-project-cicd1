name: publish
on:
  push:
    branches: [ master ]

jobs:
  # Build jobs
  build:
    # depends on test's job
    # needs: tests
    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v2
      #Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Build the application using Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - run: mkdir staging && cp target/*.jar staging
      #Build the application using Maven
      - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        uses: actions/upload-artifact@v2
        with:
          #Set artifact name b4 artifact
          name: Package
          #From this path
          path: staging # b4 target/devops-tools-mgt-SNAPSHOT-1.0.jar

  Publish: #login:
    name: Publish to GH Container Registry
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '17'

      # Build Spring boot
      - name: Build the project
        run: mvn -B install

      #- name: Update version
      #  run: mvn -B versions:set -DnewVersion=v${{github.run_number}} -DgenerateBackupPoms=false
      #- name: Setup Docker Buildx
      #  uses: docker/setup-buildx-action@v1

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # Log out from the Docker registry at the end of a job
          logout: true

      #- name: Check out code
      #  uses: actions/checkout@v2
      #- name: Download artifact
      #  uses: actions/download-artifact@v2

      - name: Build the App Docker image and push
        run: mvn jib:build
        #run: |
        #  docker build . --tag ghcr.io/viajook/doc-project-cicd1:latest
        #  docker run ghcr.io/viajook/doc-project-cicd1:latest
        #  docker push ghcr.io/viajook/doc-project-cicd1:latest
      #- name: Build and push
      #  id: docker_build
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    push: true
      #    tags: viajook/doc-project-cicd1:v${{github.run_number}}
